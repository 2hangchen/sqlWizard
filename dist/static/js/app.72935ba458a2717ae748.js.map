{"version":3,"sources":["webpack:///./src/App.vue?b09f","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///src/components/SqlWizard.vue","webpack:///./src/components/SqlWizard.vue?9893","webpack:///./src/components/SqlWizard.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","SqlWizard","methods","onTreeItemClick","selectedItem","clickItem","column","currentFieldOpt","optType","columnFormula","tableAlias","columnName","columnDesc","title","rawValue","rawDesc","isStat","onCurrFieldFuncChangeEvent","item","_this","label","value","optFuncs","forEach","fun","onSelectFieldSelectEvent","currSelectRow","colFormula","getTableInfo","tabInfo","tableList","tab","calcFromTables","_this2","groupPaneDisable","tempTables","set_default","a","selectFields","field","add","filterFields","topTable","len","i","length","charCodeAt","substr","endsWith","topTableLen","tempTables2","map_default","tableT","leftTable","leftTableCode","joinType","joinTypeSql","rightTable","rightTableCode","table","set","pads","split","tempTab","t","leftTab","get","tableTemp","tableLeft","tableInfos","push","sort","b","selectTables","makeSelectFieldValue","cruField","columnSql","sqlPieces","replace","filter","w","sqlSen","s","test","trim","Number","clearCurrentFieldOpt","addSelectFieldEvent","event","$Message","error","_checked","updateSelectFieldEvent","ind","checked","_i","$set","_highlight","deleteSelectFieldEvent","keys_default","splice","moveSelectFieldUpEvent","temp","moveSelectFieldDownEvent","onTreeFilterClick","filterFieldOpt","fieldSql","fieldDesc","onFilterFieldFuncChangeEvent","onFilterFieldLogicChangeEvent","undefined","params","logicDesc","filterLogics","logic","logicParamShow","logicParam2Show","onFilterParamChangeEvent","logicParam","logicParamDesc","onFilterParam2ChangeEvent","logicParam2","logicParam2Desc","makeFilterSqlValue","_this3","cruFilter","legal","filterLogic","filterColumn","filterValue","filterSql","filterDesc","clearCurrentFilterOpt","logicParamSel","logicParam2Sel","addFilterSqlEvent","filterNo","filterSqlFormula","updateFilterSqlEvent","currFilterRow","removeFilterFromFormula","frormula","deleteFilterSqlEvent","onJoinTypeChangeEvent","joinOpt","onHavingFieldSelectEvent","havingFieldOpt","onHavingLogicChangeEvent","havingParamShow","havingParam2Show","onHavingParamChangeEvent","onHavingParam2ChangeEvent","makeHavingSqlValue","_this4","clearCurrentHavingOpt","addHavingSqlEvent","havingFields","havingSqlFormula","updateHavingSqlEvent","currHavingRow","deleteHavingSqlEvent","onSortFieldSelectEvent","sortOpt","sortColumn","sortColumnDesc","onSortColumnSelectEvent","sortType","addSortFieldEvent","_this5","sortedFields","sortCol","sortTypeDesc","updateSortFieldEvent","_this6","deleteSortFieldEvent","_this7","moveSortFieldUpEvent","_this8","moveSortFieldDownEvent","_this9","onInsideParamChangeEvent","paramOpt","defaultValue","addParamEvent","code","prm","sqlParams","info","updateParamEvent","_this10","deleteParamEvent","_this11","makeQueryResultEvent","_this12","sqlSentence","fieldsSql","indCount","lastIndexOf","fromTableSql","colCount","joinColumns","colMap","leftColumn","rightColumn","whereSql","groupBySql","havingSql","_s","n","_i2","orderBySql","sf","fullSqlSen","data","databaseType","tableFields","expand","children","buttonSize","paramCode","paramName","haveSelectCols","key","selectCols","type","width","align","functions","oracle","mySql","tableCols","joinTypes","filterCols","havingCols","sortedCols","paramsCols","dbInsideFuncs","funcName","dataType","components_SqlWizard","this$1","_vm","staticStyle","height","border","highlight-row","columns","on","on-current-change","_v","placeholder","model","callback","$$v","expression","on-change","size","click","background","hide-trigger","on-select-change","ref","label-in-value","_l","margin-bottom","_e","directives","rawName","func","rows","readonly","disabled","src_components_SqlWizard","SqlWizard_normalizeComponent","Vue","use","Router","router","routes","path","component","config","productionTip","iview","el","components","App","template"],"mappings":"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","file":"static/js/app.72935ba458a2717ae748.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b1bb7210\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b1bb7210\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b1bb7210\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <!--<img src=\"./assets/logo.png\">-->\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n#app {\n  height: 100vh;\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n  <Tabs type=\"card\" style=\"height: 100vh;\">\n    <TabPane label=\"参数设定\">\n      <Layout>\n        <Content>\n          <Table border\n                 highlight-row\n                 :columns=\"paramsCols\" :data=\"sqlParams\"\n                 @on-current-change=\"(item) => this.paramOpt = item\"\n          ></Table>\n        </Content>\n        <Footer align=\"right\">\n          参数名：\n          <Input v-model=\"paramOpt.code\" placeholder=\"参数名\" style=\"width: auto\" />\n          参数描述：\n          <Input v-model=\"paramOpt.name\" placeholder=\"参数中文描述\" style=\"width: auto\" />\n          默认值：\n          <Input v-model=\"paramOpt.defaultValue\" placeholder=\"参数默认值（可以式表达式）\" style=\"width: auto\" />\n          <Select style=\"width: 70px\" @on-change=\"onInsideParamChangeEvent\"> <!--slot=\"append\"-->\n            <Option value=\"currentDate()\" key=\"currentDate()\">当前时间</Option>\n            <Option value=\"year()\" key=\"year()\">当前年份</Option>\n            <Option value=\"month()\" key=\"month()\">当前月份</Option>\n          </Select>\n          <br/>\n          <Button :size=\"buttonSize\" type=\"primary\" @click=\"addParamEvent\">\n            添加\n          </Button>\n          <Button :size=\"buttonSize\" type=\"primary\" @click=\"updateParamEvent\">\n            修改\n          </Button>\n          <Button :size=\"buttonSize\" type=\"primary\" @click=\"deleteParamEvent\">\n            删除\n          </Button>\n        </Footer>\n      </Layout>\n    </TabPane>\n    <TabPane label=\"选择字段\">\n      <Layout>\n        <Sider style=\"background: #fff;\" hide-trigger>\n          <div>\n            <Tree\n              @on-select-change=\"onTreeItemClick\"\n              :data=\"tableFields\"></Tree>\n          </div>\n        </Sider>\n        <Layout>\n          <Content>\n            <Table border ref=\"fieldSelection\" :columns=\"selectCols\" :data=\"selectFields\"\n                   highlight-row\n                   @on-current-change=\"onSelectFieldSelectEvent\"\n            ></Table>\n          </Content>\n          <Footer align=\"left\">\n            数据处理:\n            <br>\n            <Select style=\"width:200px\" :label-in-value=\"true\" v-model=\"currentFieldOpt.optType\" @on-change=\"onCurrFieldFuncChangeEvent\" >\n              <Option v-for=\"item in optFuncs\" :value=\"item.functions[databaseType]\" :key=\"item.functions[databaseType]\">{{ item.label }}</Option>\n              <Option value=\"colOpt\" key=\"colOpt\">字段运算</Option>\n            </Select>\n            <br style=\"margin-bottom:15px;\"/>\n                字段语句：\n                <Input v-model=\"currentFieldOpt.columnFormula\" placeholder=\"字段或者字段表达式\" style=\"width: auto\" />\n                别名：\n                <Input v-model=\"currentFieldOpt.columnName\" placeholder=\"返回数据字段属性名\" style=\"width: auto\" />\n            <br/>\n            字段描述：\n            <Input v-model=\"currentFieldOpt.columnDesc\" placeholder=\"字段名称，一般用于标识字段内容\" style=\"width: auto\" />\n            <br/>\n            <ButtonGroup :size=\"buttonSize\">\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"moveSelectFieldUpEvent\">\n                <Icon type=\"ios-arrow-back\" />\n                上移\n              </Button>\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"moveSelectFieldDownEvent\">\n                下移\n                <Icon type=\"ios-arrow-forward\" />\n              </Button>\n            </ButtonGroup>\n            <ButtonGroup :size=\"buttonSize\">\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"addSelectFieldEvent\">\n                添加\n              </Button>\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"updateSelectFieldEvent\">\n                修改\n              </Button>\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"deleteSelectFieldEvent\">\n                删除\n              </Button>\n            </ButtonGroup>\n          </Footer>\n        </Layout>\n      </Layout>\n    </TabPane>\n    <TabPane label=\"数据过滤\">\n      <Layout>\n        <Sider style=\"background: #fff;\" hide-trigger>\n          <div>\n            <Tree\n              @on-select-change=\"onTreeFilterClick\"\n              :data=\"tableFields\"></Tree>\n          </div>\n        </Sider>\n        <Layout>\n          <Content>\n            <Table border :columns=\"filterCols\" :data=\"filterFields\"\n                   highlight-row\n                   @on-current-change=\"(item) => this.currFilterRow = item\"\n            ></Table>\n          </Content>\n          <Footer align=\"left\">\n            数据处理:\n            <Select style=\"width:200px\" v-model=\"filterFieldOpt.optType\" :label-in-value=\"true\"  @on-change=\"onFilterFieldFuncChangeEvent\">\n              <Option v-for=\"item in optFuncs\" v-if=\"! item.isStat\" :value=\"item.functions[databaseType]\"\n                      :key=\"item.functions[databaseType]\">{{ item.label }}</Option>\n            </Select>\n            <br style=\"margin-bottom:15px;\"/>\n            字段语句：\n            <Input v-model=\"filterFieldOpt.fieldSql\" placeholder=\"字段或者字段表达式\" style=\"width: auto\" />\n            字段描述：\n            <Input v-model=\"filterFieldOpt.fieldDesc\" placeholder=\"字段描述\" style=\"width: auto\" />\n            <br/>\n            逻辑：\n            <Select style=\"width:200px\" v-model=\"filterFieldOpt.filterLogic\" :label-in-value=\"true\"  @on-change=\"onFilterFieldLogicChangeEvent\">\n              <Option v-for=\"item in filterLogics\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n            </Select>\n            <br/>\n            <div v-show=\"logicParamShow\">\n              {{filterFieldOpt.filterLogic}}：\n              <Input v-model=\"filterFieldOpt.logicParam\" placeholder=\"参数\" style=\"width: auto\" />\n                <Select v-model=\"filterFieldOpt.logicParamSel\" style=\"width: 70px\" :label-in-value=\"true\" @on-change=\"onFilterParamChangeEvent\"> <!--slot=\"append\"-->\n                  <Option v-for=\"item in sqlParams\" :value=\"':' + item.code\" :key=\"':' + item.code\">{{ item.name }}</Option>\n                  <Option v-for=\"func in dbInsideFuncs\" :value=\"func.functions[databaseType]\" :key=\"func.functions[databaseType]\">{{func.funcName }}</Option>\n                </Select>\n              <!--</Input>-->\n            </div>\n\n            <div v-show=\"logicParam2Show\">\n              and：\n              <Input v-model=\"filterFieldOpt.logicParam2\" placeholder=\"参数2\" style=\"width: auto\" />\n              <Select v-model=\"filterFieldOpt.logicParam2Sel\" style=\"width: 70px\" :label-in-value=\"true\" @on-change=\"onFilterParam2ChangeEvent\"> <!--slot=\"append\"-->\n                <Option v-for=\"item in sqlParams\" :value=\"':' + item.code\" :key=\"':' + item.code\">{{ item.name }}</Option>\n                <Option v-for=\"func in dbInsideFuncs\" :value=\"func.functions[databaseType]\" :key=\"func.functions[databaseType]\">{{func.funcName }}</Option>\n              </Select>\n              <!-- </Input>-->\n            </div>\n\n            <Button :size=\"buttonSize\" type=\"primary\" @click=\"addFilterSqlEvent\">\n              添加\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\" @click=\"updateFilterSqlEvent\">\n              修改\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\" @click=\"deleteFilterSqlEvent\">\n              删除\n            </Button>\n            <br/>\n            逻辑表达式，序号待办上面列表中的条件,如果不在范围内表已删除的条件，需要移除;’*‘表示and'+'表示or，还可以使用'('和')'：\n            <Input v-model=\"filterSqlFormula\" type=\"textarea\" :rows=\"2\" placeholder=\"序号表示上面表格中对应的语句，+ 表示或 * 表示并\" />\n            <!--<br/>\n            <Button :size=\"buttonSize\" type=\"primary\">\n              并\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\">\n              或\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\">\n              （\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\">\n              ）\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\">\n              取反\n            </Button>-->\n          </Footer>\n        </Layout>\n      </Layout>\n    </TabPane>\n    <TabPane label=\"关联管理\">\n      <Layout>\n        <Content>\n          <Table border :columns=\"tableCols\" :data=\"selectTables\"\n                 highlight-row\n                 @on-current-change=\"(item) => this.joinOpt = item\"\n          ></Table>\n        </Content>\n        <Footer align=\"right\">\n          表一：\n          <Input v-model=\"joinOpt.leftTable\" placeholder=\"主表\" style=\"width: auto\" readonly />\n          <Select style=\"width:200px\" v-model=\"joinOpt.joinTypeSql\" :label-in-value=\"true\" @on-change=\"onJoinTypeChangeEvent\">\n            <Option v-for=\"item in joinTypes\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n          </Select>\n          表二：\n          <Input v-model=\"joinOpt.rightTable\" placeholder=\"从表\" style=\"width: auto\" readonly />\n        </Footer>\n      </Layout>\n    </TabPane>\n    <TabPane label=\"分组过滤\" :disabled=\"groupPaneDisable\">\n      <Layout>\n        <Sider style=\"background: #fff;\" hide-trigger>\n          <Table border\n                 highlight-row\n                 :columns=\"haveSelectCols\" :data=\"selectFields.filter(n => n.isStat)\"\n                 @on-current-change=\"onHavingFieldSelectEvent\"\n          ></Table>\n        </Sider>\n        <Layout>\n          <Content>\n            <Table border\n                   highlight-row\n                   :columns=\"havingCols\" :data=\"havingFields\"\n                   @on-current-change=\"(item) => this.currHavingRow = item\"\n            ></Table>\n          </Content>\n          <Footer align=\"left\">\n            字段语句：\n            <Input v-model=\"havingFieldOpt.fieldSql\" placeholder=\"字段或者字段表达式\" style=\"width: auto\" readonly />\n            字段描述：\n            <Input v-model=\"havingFieldOpt.fieldDesc\" placeholder=\"字段描述\" style=\"width: auto\" readonly />\n            <br/>\n            逻辑：\n            <Select style=\"width:200px\" v-model=\"havingFieldOpt.filterLogic\" :label-in-value=\"true\"  @on-change=\"onHavingLogicChangeEvent\">\n              <Option v-for=\"item in filterLogics\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\n            </Select>\n            <br/>\n            <div v-show=\"havingParamShow\">\n              {{havingFieldOpt.filterLogic}}：\n              <Input v-model=\"havingFieldOpt.logicParam\" placeholder=\"参数\" style=\"width: auto\" />\n              <Select v-model=\"havingFieldOpt.logicParamSel\" style=\"width: 70px\" :label-in-value=\"true\" @on-change=\"onHavingParamChangeEvent\"> <!--slot=\"append\"-->\n                <Option v-for=\"item in sqlParams\" :value=\"':' + item.code\" :key=\"':' + item.code\">{{ item.name }}</Option>\n                <Option v-for=\"func in dbInsideFuncs\" :value=\"func.functions[databaseType]\" :key=\"func.functions[databaseType]\">{{func.funcName }}</Option>\n              </Select>\n              <!--</Input>-->\n            </div>\n\n            <div v-show=\"havingParam2Show\">\n              and：\n              <Input v-model=\"havingFieldOpt.logicParam2\" placeholder=\"参数2\" style=\"width: auto\" />\n              <Select v-model=\"havingFieldOpt.logicParam2Sel\" style=\"width: 70px\" :label-in-value=\"true\" @on-change=\"onHavingParam2ChangeEvent\"> <!--slot=\"append\"-->\n                <Option v-for=\"item in sqlParams\" :value=\"':' + item.code\" :key=\"':' + item.code\">{{ item.name }}</Option>\n                <Option v-for=\"func in dbInsideFuncs\" :value=\"func.functions[databaseType]\" :key=\"func.functions[databaseType]\">{{func.funcName }}</Option>\n              </Select>\n              <!-- </Input>-->\n            </div>\n\n            <br/>\n            <Button :size=\"buttonSize\" type=\"primary\" @click=\"addHavingSqlEvent\">\n              添加\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\" @click=\"updateHavingSqlEvent\">\n              修改\n            </Button>\n            <Button :size=\"buttonSize\" type=\"primary\" @click=\"deleteHavingSqlEvent\">\n              删除\n            </Button>\n            <br/>\n            逻辑表达式，序号待办上面列表中的条件,如果不在范围内表已删除的条件，需要移除;’*‘表示and'+'表示or，还可以使用'('和')'：\n            <Input v-model=\"havingSqlFormula\" type=\"textarea\" :rows=\"2\" placeholder=\"序号表示上面表格中对应的语句，+ 表示或 * 表示并\" />\n          </Footer>\n        </Layout>\n      </Layout>\n    </TabPane>\n    <TabPane label=\"排序设定\">\n      <Layout>\n        <Sider style=\"background: #fff;\" hide-trigger>\n          <Table border\n                 highlight-row\n                 :columns=\"haveSelectCols\" :data=\"selectFields\"\n                 @on-current-change=\"onSortFieldSelectEvent\"\n          ></Table>\n        </Sider>\n        <Layout>\n          <Content>\n            <Table border\n                   highlight-row\n                   :columns=\"sortedCols\" :data=\"sortedFields\"\n                   @on-current-change=\"onSortColumnSelectEvent\"\n            ></Table>\n          </Content>\n          <Footer align=\"left\">\n            排序字段：\n            <Input v-model=\"sortOpt.sortColumnDesc\" placeholder=\"排序字段\" style=\"width: auto\" readonly />\n            排序方式：\n            <Select style=\"width:200px\" v-model=\"sortOpt.sortType\" >\n              <Option value=\"asc\">升序</Option>\n              <Option value=\"desc\">降序</Option>\n            </Select>\n            <br/>\n            <ButtonGroup :size=\"buttonSize\">\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"moveSortFieldUpEvent\">\n                <Icon type=\"ios-arrow-back\" />\n                上移\n              </Button>\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"moveSortFieldDownEvent\">\n                下移\n                <Icon type=\"ios-arrow-forward\" />\n              </Button>\n            </ButtonGroup>\n            <ButtonGroup :size=\"buttonSize\">\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"addSortFieldEvent\">\n                添加\n              </Button>\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"updateSortFieldEvent\">\n                修改\n              </Button>\n              <Button :size=\"buttonSize\" type=\"primary\" @click=\"deleteSortFieldEvent\">\n                删除\n              </Button>\n            </ButtonGroup>\n          </Footer>\n        </Layout>\n      </Layout>\n    </TabPane>\n    <TabPane label=\"结果展示*\">\n      <Button :size=\"buttonSize\" type=\"primary\" @click=\"makeQueryResultEvent\">\n        生成结果\n      </Button>\n      <br/>\n      <Input v-model=\"sqlSentence.fullSqlSen\" type=\"textarea\" :rows=\"20\" readonly />\n    </TabPane>\n  </Tabs>\n</template>\n\n<script>\nexport default {\n  name: 'SqlWizard',\n  methods: {\n    onTreeItemClick (selectedItem, clickItem) {\n      if (clickItem.column) {\n        this.currentFieldOpt.optType = 'none'\n        this.currentFieldOpt.columnFormula = clickItem.tableAlias + '.' + clickItem.column\n        this.currentFieldOpt.columnName = clickItem.column\n        this.currentFieldOpt.columnDesc = clickItem.title\n        this.currentFieldOpt.rawValue = clickItem.tableAlias + '.' + clickItem.column\n        this.currentFieldOpt.rawDesc = clickItem.title\n        this.currentFieldOpt.tableAlias = clickItem.tableAlias\n        this.currentFieldOpt.isStat = false\n      }\n    },\n    onCurrFieldFuncChangeEvent (item) {\n      // 需要一个标注输据库类型全局变量，根据不同的数据库拼接不同的函数\n      // this.currentFieldOpt.optType = item.value\n      if (this.currentFieldOpt.rawValue === '') {\n        return\n      }\n      this.currentFieldOpt.columnDesc = '对 ' + this.currentFieldOpt.rawDesc + ' ' + item.label\n      this.currentFieldOpt.isStat = false\n      if (item.value !== 'colOpt') {\n        this.currentFieldOpt.columnFormula = item.value + '(' + this.currentFieldOpt.rawValue + ')'\n        this.optFuncs.forEach(fun => {\n          if (item.label === fun.label) {\n            this.currentFieldOpt.isStat = fun.isStat\n            return false\n          }\n        })\n      }\n    },\n    onSelectFieldSelectEvent (item) {\n      this.currSelectRow = item\n      this.currentFieldOpt.optType = this.currSelectRow.optType || 'none'\n      this.currentFieldOpt.columnFormula = this.currSelectRow.colFormula\n      this.currentFieldOpt.columnName = this.currSelectRow.columnName\n      this.currentFieldOpt.columnDesc = this.currSelectRow.columnDesc\n      this.currentFieldOpt.rawValue = this.currSelectRow.colFormula\n      this.currentFieldOpt.rawDesc = this.currSelectRow.columnDesc\n      this.currentFieldOpt.isStat = this.currSelectRow.isStat\n    },\n    getTableInfo (tableAlias) {\n      let tabInfo = {}\n      this.tableList.forEach(tab => {\n        if (tableAlias === tab.tableAlias) {\n          tabInfo = tab\n          return false\n        }\n      })\n      return tabInfo\n    },\n    calcFromTables () {\n      this.groupPaneDisable = true\n      let tempTables = new Set()\n      this.selectFields.forEach(field => {\n        if (field.isStat) {\n          this.groupPaneDisable = false\n        }\n        tempTables.add(this.getTableInfo(field.tableAlias))\n      })\n      this.filterFields.forEach(field => tempTables.add(this.getTableInfo(field.tableAlias)))\n      let topTable = ''\n      tempTables.forEach(tab => {\n        if (topTable === '') {\n          topTable = tab.tableAlias\n        } else {\n          let len = 0\n          for (let i = 0; i < topTable.length && i < tab.tableAlias.length; i++) {\n            if (topTable.charCodeAt(i) === tab.tableAlias.charCodeAt(i)) {\n              len++\n            } else {\n              break\n            }\n          }\n          topTable = topTable.substr(0, len)\n        }\n      })\n      if (topTable.endsWith('_')) {\n        topTable = topTable.substr(0, topTable.length - 1)\n      }\n      let topTableLen = topTable.length + 1\n      let tempTables2 = new Map()\n      let tableT = this.getTableInfo(topTable)\n\n      tableT.leftTable = ''\n      tableT.leftTableCode = ''\n      tableT.joinType = ''\n      tableT.joinTypeSql = ''\n      tableT.rightTable = tableT.title\n      tableT.rightTableCode = tableT.table + ' ' + tableT.tableAlias\n\n      tempTables2.set(topTable, tableT)\n      tempTables.forEach(tab => {\n        if (tab.tableAlias !== topTable) {\n          let pads = tab.tableAlias.substr(topTableLen).split('_')\n          let tempTab = topTable\n          pads.forEach(t => {\n            let leftTab = tempTab\n            tempTab = tempTab + '_' + t\n            if (!tempTables2.get(tempTab)) {\n              let tableTemp = this.getTableInfo(tempTab)\n              let tableLeft = this.getTableInfo(leftTab)\n              tableTemp.leftTable = tableLeft.title\n              tableTemp.leftTableCode = leftTab // tableLeft.table + ' ' + tableLeft.tableAlias\n              tableTemp.joinType = tableTemp.joinType || '内链接'\n              tableTemp.joinTypeSql = tableTemp.joinTypeSql || 'join'\n              tableTemp.rightTable = tableTemp.title\n              tableTemp.rightTableCode = tableTemp.table + ' ' + tableTemp.tableAlias\n              tempTables2.set(tempTab, tableTemp)\n            }\n          })\n        }\n      })\n      let tableInfos = []\n      tempTables2.forEach((value) => tableInfos.push(value))\n      tableInfos.sort((a, b) => a.tableAlias > b.tableAlias ? 1 : -1)\n      this.selectTables = tableInfos\n    },\n    makeSelectFieldValue () {\n      let cruField = {}\n      cruField.colFormula = this.currentFieldOpt.columnFormula\n      cruField.columnName = this.currentFieldOpt.columnName\n      cruField.columnDesc = this.currentFieldOpt.columnDesc\n      cruField.columnSql = this.currentFieldOpt.columnFormula\n      cruField.tableAlias = this.currentFieldOpt.tableAlias\n      if (this.currentFieldOpt.optType === 'colOpt') {\n        // 1,2,3,4,5\n        let sqlPieces = cruField.columnSql.replace(/([+\\-*/(),])/g, '@#$1@#').split('@#').filter(w => w)\n        let sqlSen = ''\n        for (let s in sqlPieces) {\n          if (/^\\d+$/.test(sqlPieces[s].trim())) {\n            let i = Number(sqlPieces[s].trim())\n            if (i - 1 < this.selectFields.length) {\n              sqlSen += this.selectFields[i - 1].columnSql\n            } else {\n              sqlSen += sqlPieces[s]\n            }\n          } else {\n            sqlSen += sqlPieces[s]\n          }\n          // cruField.columnSql = cruField.columnSql.replace(i + 1, this.selectFields[i].columnSql)\n        }\n        cruField.columnSql = sqlSen\n      }\n      cruField.isStat = this.currentFieldOpt.isStat\n      cruField.optType = this.currentFieldOpt.optType\n      return cruField\n    },\n    clearCurrentFieldOpt () {\n      this.currentFieldOpt.optType = 'none'\n      this.currentFieldOpt.columnFormula = ''\n      this.currentFieldOpt.columnName = ''\n      this.currentFieldOpt.columnDesc = ''\n      this.currentFieldOpt.rawValue = ''\n      this.currentFieldOpt.rawDesc = ''\n      this.currentFieldOpt.isStat = false\n    },\n    addSelectFieldEvent (event) {\n      if (this.currentFieldOpt.columnName === '') {\n        return\n      }\n      // 需要检查 this.currentFieldOpt.columnName 和列表中的别名有没有冲突，如果有冲突需要修改，否则不能添加\n      for (let i = 0; i < this.selectFields.length; i++) {\n        if (this.currentFieldOpt.columnName === this.selectFields[i].columnName) {\n          this.$Message.error('字段别名重复，请修改 :' + this.currentFieldOpt.columnName)\n          return\n        }\n      }\n      let cruField = this.makeSelectFieldValue()\n      cruField._checked = true\n      this.selectFields.push(cruField)\n      this.clearCurrentFieldOpt()\n      this.calcFromTables()\n    },\n    updateSelectFieldEvent (event) {\n      let ind = -1\n      let checked = true\n      if (this.currSelectRow) {\n        for (let i = 0; i < this.selectFields.length; i++) {\n          if (this.currSelectRow.columnName === this.selectFields[i].columnName) {\n            ind = i\n            checked = this.currSelectRow._checked\n            break\n          }\n        }\n      }\n      if (ind < 0) {\n        return\n      }\n      for (let i = 0; i < this.selectFields.length; i++) {\n        if (i !== ind && this.currentFieldOpt.columnName === this.selectFields[i].columnName) {\n          this.$Message.error('字段别名重复，请修改 :' + this.currentFieldOpt.columnName)\n          return\n        }\n      }\n      let cruField = this.makeSelectFieldValue()\n      cruField._checked = checked\n      this.$set(this.selectFields, ind, cruField)\n      this.clearCurrentFieldOpt()\n      // 这一句 不起作用，奇怪\n      this.currSelectRow._highlight = true\n      this.calcFromTables()\n    },\n    deleteSelectFieldEvent (event) {\n      if (Object.keys(this.currSelectRow).length !== 0) {\n        let ind = -1\n        for (let i = 0; i < this.selectFields.length; i++) {\n          if (this.currSelectRow.columnName === this.selectFields[i].columnName) {\n            ind = i\n            break\n          }\n        }\n        if (ind >= 0) {\n          this.selectFields.splice(ind, 1)\n        }\n      }\n      this.calcFromTables()\n    },\n    moveSelectFieldUpEvent (event) {\n      let ind = -1\n      if (this.currSelectRow) {\n        for (let i = 0; i < this.selectFields.length; i++) {\n          if (this.currSelectRow.columnName === this.selectFields[i].columnName) {\n            ind = i\n            break\n          }\n        }\n      }\n\n      if (ind > 0) {\n        const temp = this.selectFields[ind - 1]\n        this.$set(this.selectFields, ind - 1, this.currSelectRow)\n        this.$set(this.selectFields, ind, temp)\n        this.currSelectRow._highlight = true\n      }\n    },\n    moveSelectFieldDownEvent (event) {\n      let ind = -1\n      if (this.currSelectRow) {\n        for (let i = 0; i < this.selectFields.length; i++) {\n          if (this.currSelectRow.columnName === this.selectFields[i].columnName) {\n            ind = i\n            break\n          }\n        }\n      }\n\n      if (ind >= 0 && ind < this.selectFields.length - 1) {\n        const temp = this.selectFields[ind + 1]\n        this.$set(this.selectFields, ind + 1, this.currSelectRow)\n        this.$set(this.selectFields, ind, temp)\n        this.currSelectRow._highlight = true\n      }\n    },\n    // 过滤条件树 点击事件\n    onTreeFilterClick (selectedItem, clickItem) {\n      if (clickItem.column) {\n        this.filterFieldOpt.optType = 'none'\n        this.filterFieldOpt.rawValue = clickItem.tableAlias + '.' + clickItem.column\n        this.filterFieldOpt.fieldSql = clickItem.tableAlias + '.' + clickItem.column\n        this.filterFieldOpt.rawDesc = clickItem.title\n        this.filterFieldOpt.fieldDesc = clickItem.title\n        this.filterFieldOpt.tableAlias = clickItem.tableAlias\n      }\n    },\n    // 数据过滤页面 数据处理 选择\n    onFilterFieldFuncChangeEvent (item) {\n      // 需要一个标注输据库类型全局变量，根据不同的数据库拼接不同的函数\n      if (this.filterFieldOpt.rawValue === '') {\n        return\n      }\n      this.filterFieldOpt.fieldSql = item.value + '(' + this.filterFieldOpt.rawValue + ')'\n      this.filterFieldOpt.fieldDesc = '对 ' + this.filterFieldOpt.rawDesc + ' ' + item.label\n    },\n    onFilterFieldLogicChangeEvent (item) {\n      if (item !== undefined) {\n        let params = 1\n        this.filterFieldOpt.logicDesc = item.label\n        this.filterLogics.forEach(logic => {\n          if (item.value === logic.value) {\n            params = logic.params\n            return false\n          }\n        })\n        this.logicParamShow = params > 0\n        this.logicParam2Show = params > 1\n      }\n    },\n    onFilterParamChangeEvent (item) {\n      if (item !== undefined) {\n        this.filterFieldOpt.logicParam = item.value\n        this.filterFieldOpt.logicParamDesc = item.label\n      }\n    },\n    onFilterParam2ChangeEvent (item) {\n      if (item !== undefined) {\n        this.filterFieldOpt.logicParam2 = item.value\n        this.filterFieldOpt.logicParam2Desc = item.label\n      }\n    },\n    makeFilterSqlValue () {\n      let cruFilter = {}\n      cruFilter.legal = this.filterFieldOpt.fieldSql && this.filterFieldOpt.filterLogic\n      cruFilter.filterColumn = this.filterFieldOpt.fieldSql\n      cruFilter.tableAlias = this.filterFieldOpt.tableAlias\n      cruFilter.filterLogic = this.filterFieldOpt.logicDesc\n      cruFilter.filterValue = this.filterFieldOpt.logicParamDesc || this.filterFieldOpt.logicParam\n      if (this.filterFieldOpt.logicParam2) {\n        cruFilter.filterValue += ',' + (this.filterFieldOpt.logicParam2Desc || this.filterFieldOpt.logicParam2)\n      }\n\n      let params = 1\n      this.filterLogics.forEach(logic => {\n        if (this.filterFieldOpt.filterLogic === logic.value) {\n          params = logic.params\n          return false\n        }\n      })\n      if (params === 0) {\n        cruFilter.filterValue = '--'\n        cruFilter.filterSql = this.filterFieldOpt.fieldSql + this.filterFieldOpt.filterLogic\n        cruFilter.filterDesc = this.filterFieldOpt.fieldDesc + this.filterFieldOpt.logicDesc\n      } else if (params === 2) { // 目前只有 between\n        if (!this.filterFieldOpt.logicParam || !this.filterFieldOpt.logicParam2) {\n          cruFilter.legal = false\n        }\n        cruFilter.filterSql = this.filterFieldOpt.fieldSql + ' between ' + this.filterFieldOpt.logicParam + ' and ' + this.filterFieldOpt.logicParam2\n        cruFilter.filterDesc = this.filterFieldOpt.fieldDesc + ' 介于 ' + (this.filterFieldOpt.logicParamDesc || this.filterFieldOpt.logicParam) +\n          ' 和 ' + (this.filterFieldOpt.logicParam2Desc || this.filterFieldOpt.logicParam2) + ' 之间'\n      } else {\n        if (!this.filterFieldOpt.logicParam) {\n          cruFilter.legal = false\n        }\n        if (this.filterFieldOpt.filterLogic === 'in()') {\n          cruFilter.filterSql = this.filterFieldOpt.fieldSql + ' in (' + this.filterFieldOpt.logicParam + ')'\n        } else {\n          cruFilter.filterSql = this.filterFieldOpt.fieldSql + this.filterFieldOpt.filterLogic + this.filterFieldOpt.logicParam\n        }\n        cruFilter.filterDesc = this.filterFieldOpt.fieldDesc + this.filterFieldOpt.logicDesc + (this.filterFieldOpt.logicParamDesc || this.filterFieldOpt.logicParam)\n      }\n      return cruFilter\n    },\n    clearCurrentFilterOpt () {\n      this.filterFieldOpt.optType = 'none'\n      this.filterFieldOpt.fieldSql = ''\n      this.filterFieldOpt.filterLogic = ''\n      this.filterFieldOpt.logicParam = ''\n      this.filterFieldOpt.logicParam2 = ''\n      this.filterFieldOpt.logicParamSel = ''\n      this.filterFieldOpt.logicParam2Sel = ''\n      this.filterFieldOpt.fieldDesc = ''\n    },\n    addFilterSqlEvent (event) {\n      let cruFilter = this.makeFilterSqlValue()\n      cruFilter.filterNo = this.filterFields.length + 1\n      if (cruFilter.legal) {\n        this.filterFields.push(cruFilter)\n        if (this.filterSqlFormula) {\n          this.filterSqlFormula += ' * '\n        }\n        this.filterSqlFormula += cruFilter.filterNo\n        this.clearCurrentFilterOpt()\n        this.calcFromTables()\n      }\n    },\n    updateFilterSqlEvent (event) {\n      let ind = this.currFilterRow.filterNo\n      if (ind > 0 && ind <= this.filterFields.length) {\n        let cruFilter = this.makeFilterSqlValue()\n        if (cruFilter.legal) {\n          cruFilter.filterNo = ind\n          this.$set(this.filterFields, ind - 1, cruFilter)\n          this.currFilterRow._highlight = true\n          this.clearCurrentFilterOpt()\n          this.calcFromTables()\n        }\n      }\n    },\n    removeFilterFromFormula (frormula, filterNo) {\n      let sqlPieces = frormula.replace(/([+*()])/g, '@#$1@#').split('@#').filter(w => w)\n      let sqlSen = ''\n      for (let s in sqlPieces) {\n        if (sqlSen) {\n          sqlSen += ' '\n        }\n        if (/^\\d+$/.test(sqlPieces[s].trim())) {\n          let i = Number(sqlPieces[s].trim())\n          if (i > filterNo) {\n            sqlSen += (i - 1)\n          } else if (i === filterNo) {\n            sqlSen += '0'\n          } else {\n            sqlSen += sqlPieces[s]\n          }\n        } else {\n          sqlSen += sqlPieces[s]\n        }\n      }\n      return sqlSen\n    },\n    deleteFilterSqlEvent (event) {\n      if (Object.keys(this.currFilterRow).length !== 0) {\n        for (let i = this.currFilterRow.filterNo; i < this.filterFields.length; i++) {\n          this.filterFields[i].filterNo = i\n        }\n        this.filterFields.splice(this.currFilterRow.filterNo - 1, 1)\n        this.filterSqlFormula = this.removeFilterFromFormula(this.filterSqlFormula, this.currFilterRow.filterNo)\n        this.calcFromTables()\n      }\n    },\n    onJoinTypeChangeEvent (item) {\n      if (this.joinOpt && this.joinOpt.leftTable) {\n        for (let i = 0; i < this.selectTables.length; i++) {\n          if (this.joinOpt.rightTableCode === this.selectTables[i].rightTableCode) {\n            this.selectTables[i].joinType = item.label\n            this.selectTables[i].joinTypeSql = item.value\n            this.$set(this.selectTables, i, this.selectTables[i])\n            this.joinOpt._highlight = true\n            break\n          }\n        }\n      }\n    },\n    onHavingFieldSelectEvent (item) {\n      if (item) {\n        this.havingFieldOpt.fieldSql = item.columnSql\n        this.havingFieldOpt.fieldDesc = item.columnDesc\n      }\n    },\n    onHavingLogicChangeEvent (item) {\n      if (item !== undefined) {\n        let params = 1\n        this.havingFieldOpt.logicDesc = item.label\n        this.filterLogics.forEach(logic => {\n          if (item.value === logic.value) {\n            params = logic.params\n            return false\n          }\n        })\n        this.havingParamShow = params > 0\n        this.havingParam2Show = params > 1\n      }\n    },\n    onHavingParamChangeEvent (item) {\n      if (item !== undefined) {\n        this.havingFieldOpt.logicParam = item.value\n        this.havingFieldOpt.logicParamDesc = item.label\n      }\n    },\n    onHavingParam2ChangeEvent (item) {\n      if (item !== undefined) {\n        this.havingFieldOpt.logicParam2 = item.value\n        this.havingFieldOpt.logicParam2Desc = item.label\n      }\n    },\n    makeHavingSqlValue () {\n      let cruFilter = {}\n      cruFilter.legal = this.havingFieldOpt.fieldSql && this.havingFieldOpt.filterLogic\n      cruFilter.filterColumn = this.havingFieldOpt.fieldSql\n      cruFilter.tableAlias = this.havingFieldOpt.tableAlias\n      cruFilter.filterLogic = this.havingFieldOpt.logicDesc\n      cruFilter.filterValue = this.havingFieldOpt.logicParamDesc || this.havingFieldOpt.logicParam\n      if (this.havingFieldOpt.logicParam2) {\n        cruFilter.filterValue += ',' + (this.havingFieldOpt.logicParam2Desc || this.havingFieldOpt.logicParam2)\n      }\n\n      let params = 1\n      this.filterLogics.forEach(logic => {\n        if (this.havingFieldOpt.filterLogic === logic.value) {\n          params = logic.params\n          return false\n        }\n      })\n      if (params === 0) {\n        cruFilter.filterValue = '--'\n        cruFilter.filterSql = this.havingFieldOpt.fieldSql + this.havingFieldOpt.filterLogic\n        cruFilter.filterDesc = this.havingFieldOpt.fieldDesc + this.havingFieldOpt.logicDesc\n      } else if (params === 2) { // 目前只有 between\n        if (!this.havingFieldOpt.logicParam || !this.havingFieldOpt.logicParam2) {\n          cruFilter.legal = false\n        }\n        cruFilter.filterSql = this.havingFieldOpt.fieldSql + ' between ' + this.havingFieldOpt.logicParam + ' and ' + this.havingFieldOpt.logicParam2\n        cruFilter.filterDesc = this.havingFieldOpt.fieldDesc + ' 介于 ' + (this.havingFieldOpt.logicParamDesc || this.havingFieldOpt.logicParam) +\n          ' 和 ' + (this.havingFieldOpt.logicParam2Desc || this.havingFieldOpt.logicParam2) + ' 之间'\n      } else {\n        if (!this.havingFieldOpt.logicParam) {\n          cruFilter.legal = false\n        }\n        if (this.havingFieldOpt.filterLogic === 'in()') {\n          cruFilter.filterSql = this.havingFieldOpt.fieldSql + ' in (' + this.havingFieldOpt.logicParam + ')'\n        } else {\n          cruFilter.filterSql = this.havingFieldOpt.fieldSql + this.havingFieldOpt.filterLogic + this.havingFieldOpt.logicParam\n        }\n        cruFilter.filterDesc = this.havingFieldOpt.fieldDesc + this.havingFieldOpt.logicDesc + (this.havingFieldOpt.logicParamDesc || this.havingFieldOpt.logicParam)\n      }\n      return cruFilter\n    },\n    clearCurrentHavingOpt () {\n      this.havingFieldOpt.optType = 'none'\n      this.havingFieldOpt.fieldSql = ''\n      this.havingFieldOpt.filterLogic = ''\n      this.havingFieldOpt.logicParam = ''\n      this.havingFieldOpt.logicParam2 = ''\n      this.havingFieldOpt.logicParamSel = ''\n      this.havingFieldOpt.logicParam2Sel = ''\n      this.havingFieldOpt.fieldDesc = ''\n    },\n    addHavingSqlEvent (event) {\n      let cruFilter = this.makeHavingSqlValue()\n      cruFilter.filterNo = this.havingFields.length + 1\n      if (cruFilter.legal) {\n        this.havingFields.push(cruFilter)\n        if (this.havingSqlFormula) {\n          this.havingSqlFormula += ' * '\n        }\n        this.havingSqlFormula += cruFilter.filterNo\n        this.clearCurrentHavingOpt()\n      }\n    },\n    updateHavingSqlEvent (event) {\n      let ind = this.currHavingRow.filterNo\n      let cruFilter = this.makeHavingSqlValue()\n      if (cruFilter.legal) {\n        cruFilter.filterNo = ind\n        this.$set(this.havingFields, ind - 1, cruFilter)\n        this.currHavingRow._highlight = true\n        this.clearCurrentHavingOpt()\n      }\n    },\n    deleteHavingSqlEvent (event) {\n      if (Object.keys(this.currHavingRow).length !== 0) {\n        for (let i = this.currHavingRow.filterNo; i < this.havingFields.length; i++) {\n          this.havingFields[i].filterNo = i\n        }\n        this.havingFields.splice(this.currHavingRow.filterNo - 1, 1)\n        this.havingSqlFormula = this.removeFilterFromFormula(this.havingSqlFormula, this.currHavingRow.filterNo)\n      }\n    },\n    onSortFieldSelectEvent (item) {\n      if (item) {\n        this.sortOpt.sortColumn = item.columnSql\n        this.sortOpt.sortColumnDesc = item.columnDesc\n      }\n    },\n    onSortColumnSelectEvent (item) {\n      if (item) {\n        this.sortOpt.sortColumn = item.columnSql\n        this.sortOpt.sortColumnDesc = item.columnDesc\n        this.sortOpt.sortType = item.sortType\n      }\n    },\n    addSortFieldEvent (event) {\n      let ind = -1\n      this.sortedFields.forEach((item, i) => {\n        if (item.columnSql === this.sortOpt.sortColumn) {\n          ind = i\n          return false\n        }\n      })\n      let sortCol = {}\n      sortCol.columnSql = this.sortOpt.sortColumn\n      sortCol.columnDesc = this.sortOpt.sortColumnDesc\n      sortCol.sortType = this.sortOpt.sortType\n      sortCol.sortTypeDesc = this.sortOpt.sortType === 'asc' ? '升序' : '降序'\n      if (ind >= 0) {\n        this.$set(this.sortedFields, ind, sortCol)\n      } else {\n        this.sortedFields.push(sortCol)\n      }\n    },\n    updateSortFieldEvent (event) {\n      let ind = -1\n\n      this.sortedFields.forEach((item, i) => {\n        if (item.columnSql === this.sortOpt.sortColumn) {\n          ind = i\n          return false\n        }\n      })\n      if (ind >= 0) {\n        let sortCol = {}\n        sortCol.columnSql = this.sortOpt.sortColumn\n        sortCol.columnDesc = this.sortOpt.sortColumnDesc\n        sortCol.sortType = this.sortOpt.sortType\n        sortCol.sortTypeDesc = this.sortOpt.sortType === 'asc' ? '升序' : '降序'\n        this.$set(this.sortedFields, ind, sortCol)\n      }\n    },\n    deleteSortFieldEvent (event) {\n      let ind = -1\n      this.sortedFields.forEach((item, i) => {\n        if (item.columnSql === this.sortOpt.sortColumn) {\n          ind = i\n          return false\n        }\n      })\n      if (ind >= 0) {\n        this.sortedFields.splice(ind, 1)\n      }\n    },\n    moveSortFieldUpEvent (event) {\n      let ind = -1\n      this.sortedFields.forEach((item, i) => {\n        if (item.columnSql === this.sortOpt.sortColumn) {\n          ind = i\n          return false\n        }\n      })\n      if (ind > 0) {\n        const temp = this.sortedFields[ind - 1]\n        this.$set(this.sortedFields, ind - 1, this.sortedFields[ind])\n        this.$set(this.sortedFields, ind, temp)\n      }\n    },\n    moveSortFieldDownEvent (event) {\n      let ind = -1\n      this.sortedFields.forEach((item, i) => {\n        if (item.columnSql === this.sortOpt.sortColumn) {\n          ind = i\n          return false\n        }\n      })\n      if (ind >= 0 && ind < this.sortedFields.length - 1) {\n        const temp = this.sortedFields[ind + 1]\n        this.$set(this.sortedFields, ind + 1, this.sortedFields[ind])\n        this.$set(this.sortedFields, ind, temp)\n      }\n    },\n    onInsideParamChangeEvent (value) {\n      if (value) {\n        this.paramOpt.defaultValue = value\n      }\n    },\n    addParamEvent (event) {\n      if (!this.paramOpt.code || !this.paramOpt.name || !this.paramOpt.defaultValue) {\n        this.$Message.info('参数名、参数名称、默认值都为必填字段！')\n        return\n      }\n      let prm = {}\n      prm.code = this.paramOpt.code\n      prm.name = this.paramOpt.name\n      prm.defaultValue = this.paramOpt.defaultValue\n      let ind = -1\n      this.sqlParams.forEach((item, i) => {\n        if (item.code === prm.code) {\n          ind = i\n          return false\n        }\n      })\n      if (ind >= 0) {\n        this.$set(this.sqlParams, ind, prm)\n      } else {\n        this.sqlParams.push(prm)\n      }\n    },\n    updateParamEvent (event) {\n      let ind = -1\n      this.sqlParams.forEach((item, i) => {\n        if (item.code === this.paramOpt.code) {\n          ind = i\n          return false\n        }\n      })\n      if (ind >= 0) {\n        if (!this.paramOpt.code || !this.paramOpt.name || !this.paramOpt.defaultValue) {\n          this.$Message.info('参数名、参数名称、默认值都为必填字段！')\n          return\n        }\n        let prm = {}\n        prm.code = this.paramOpt.code\n        prm.name = this.paramOpt.name\n        prm.defaultValue = this.paramOpt.defaultValue\n        this.$set(this.sqlParams, ind, prm)\n      }\n    },\n    deleteParamEvent (event) {\n      let ind = -1\n      this.sqlParams.forEach((item, i) => {\n        if (item.code === this.paramOpt.code) {\n          ind = i\n          return false\n        }\n      })\n      if (ind >= 0) {\n        this.sqlParams.splice(ind, 1)\n      }\n    },\n    makeQueryResultEvent (event) {\n      this.sqlSentence.fieldsSql = ''\n      let indCount = 0\n      /* filter(n => n.selection). */\n      this.selectFields.forEach(item => {\n        if (indCount > 0) {\n          this.sqlSentence.fieldsSql += ', '\n        }\n        this.sqlSentence.fieldsSql += item.columnSql\n        let i = item.columnSql.lastIndexOf('.')\n        if (item.columnSql.substr(i + 1) !== item.columnName) {\n          this.sqlSentence.fieldsSql += ' as ' + item.columnName\n        }\n        indCount++\n      })\n\n      this.sqlSentence.fromTableSql = ''\n      this.selectTables.forEach(tab => {\n        if (tab.joinTypeSql) {\n          this.sqlSentence.fromTableSql += ' ' + tab.joinTypeSql +\n            ' ' + tab.rightTableCode + ' on ('\n          let colCount = 0\n          tab.joinColumns.forEach(colMap => {\n            if (colCount > 0) {\n              this.sqlSentence.fromTableSql += ' and '\n            }\n            this.sqlSentence.fromTableSql += tab.leftTableCode + '.' +\n              colMap.leftColumn + ' = ' + tab.tableAlias + '.' +\n              colMap.rightColumn\n            colCount++\n          })\n          this.sqlSentence.fromTableSql += ')'\n        } else {\n          this.sqlSentence.fromTableSql += ' ' + tab.rightTableCode\n        }\n      })\n\n      let sqlPieces = this.filterSqlFormula.replace(/([+*()])/g, '@#$1@#').split('@#').filter(w => w)\n      let sqlSen = ''\n      for (let s in sqlPieces) {\n        if (/^\\d+$/.test(sqlPieces[s].trim())) {\n          let i = Number(sqlPieces[s].trim())\n          if (i > 0 && i <= this.filterFields.length) {\n            sqlSen += ' ' + this.filterFields[i - 1].filterSql\n          } else {\n            sqlSen += ' 1 = 1'\n          }\n        } else if (sqlPieces[s].trim() === '*') {\n          sqlSen += ' and'\n        } else if (sqlPieces[s].trim() === '+') {\n          sqlSen += ' or'\n        } else {\n          sqlSen += sqlPieces[s]\n        }\n      }\n      this.sqlSentence.whereSql = sqlSen\n      this.sqlSentence.groupBySql = ''\n      this.sqlSentence.havingSql = ''\n      if (!this.groupPaneDisable) {\n        indCount = 0\n        this.selectFields.filter(n => !n.isStat).forEach(item => {\n          if (indCount > 0) {\n            this.sqlSentence.groupBySql += ', '\n          }\n          this.sqlSentence.groupBySql += item.columnSql\n          indCount++\n        })\n        sqlSen = ''\n        sqlPieces = this.havingSqlFormula.replace(/([+*()])/g, '@#$1@#').split('@#').filter(w => w)\n        for (let s in sqlPieces) {\n          if (/^\\d+$/.test(sqlPieces[s].trim())) {\n            let i = Number(sqlPieces[s].trim())\n            if (i > 0 && i <= this.havingFields.length) {\n              sqlSen += ' ' + this.havingFields[i - 1].filterSql\n            } else {\n              sqlSen += ' 1 = 1'\n            }\n          } else if (sqlPieces[s].trim() === '*') {\n            sqlSen += ' and'\n          } else if (sqlPieces[s].trim() === '+') {\n            sqlSen += ' or'\n          } else {\n            sqlSen += sqlPieces[s]\n          }\n        }\n        this.sqlSentence.havingSql = sqlSen\n      }\n      this.sqlSentence.orderBySql = ''\n      indCount = 0\n      this.sortedFields.forEach(sf => {\n        if (indCount > 0) {\n          this.sqlSentence.orderBySql += ', '\n        }\n        this.sqlSentence.orderBySql += sf.columnSql\n        if (sf.sortType === 'desc') {\n          this.sqlSentence.orderBySql += ' desc'\n        }\n        indCount++\n      })\n      this.sqlSentence.fullSqlSen = 'select ' + this.sqlSentence.fieldsSql +\n        ' from ' + this.sqlSentence.fromTableSql\n      if (this.sqlSentence.whereSql) {\n        this.sqlSentence.fullSqlSen += ' where ' + this.sqlSentence.whereSql\n      }\n      if (this.sqlSentence.groupBySql) {\n        this.sqlSentence.fullSqlSen += ' group by ' + this.sqlSentence.groupBySql\n      }\n      if (this.sqlSentence.havingSql) {\n        this.sqlSentence.fullSqlSen += ' having ' + this.sqlSentence.havingSql\n      }\n      if (this.sqlSentence.orderBySql) {\n        this.sqlSentence.fullSqlSen += ' order by ' + this.sqlSentence.orderBySql\n      }\n      /*\n      let res = {}\n      res.sqlSen = this.sqlSentence\n      res.params = this.sqlParams\n      res.fields = this.selectFields\n      return res\n      */\n    }\n  },\n  data () {\n    return {\n      // databaseType tableList tableFields 这三个属性需要从后台获取\n      // 其中 tableList tableFields 需要分布获取\n      databaseType: 'oracle',\n      tableList: [\n        {\n          table: 'user_info',\n          tableAlias: 'T',\n          title: '用户信息表'\n        },\n        {\n          title: '教育经历',\n          table: 'user_educations',\n          tableAlias: 'T_0',\n          joinColumns: [\n            {\n              leftColumn: 'user_code',\n              rightColumn: 'user_code'\n            }\n          ]\n        },\n        {\n          title: '工作经历',\n          table: 'user_career',\n          tableAlias: 'T_1',\n          joinColumns: [\n            {\n              leftColumn: 'user_code',\n              rightColumn: 'user_code'\n            }\n          ]\n        }\n      ],\n      tableFields: [\n        {\n          title: '主键',\n          tableAlias: 'T',\n          column: 'id'\n        }, {\n          title: '用户代码',\n          tableAlias: 'T',\n          column: 'user_code'\n        }, {\n          title: '用户姓名',\n          tableAlias: 'T',\n          column: 'user_name'\n        }, {\n          title: '用户电话',\n          tableAlias: 'T',\n          column: 'user_phone'\n        },\n        {\n          title: '教育经历',\n          table: 'user_educations',\n          tableAlias: 'T_0',\n          expand: true,\n          children: [\n            {\n              title: '主键',\n              tableAlias: 'T_0',\n              column: 'id'\n            },\n            {\n              title: '学历',\n              tableAlias: 'T_0',\n              column: 'edu_record'\n            },\n            {\n              title: '学校',\n              tableAlias: 'T_0',\n              column: 'edu_school'\n            },\n            {\n              title: '入学时间',\n              tableAlias: 'T_0',\n              column: 'begin_date'\n            },\n            {\n              title: '毕业时间',\n              tableAlias: 'T_0',\n              column: 'end_date'\n            }\n          ]\n        },\n        {\n          title: '工作经历',\n          table: 'user_career',\n          tableAlias: 'T_1',\n          expand: true,\n          children: [\n            {\n              title: '主键',\n              tableAlias: 'T_1',\n              column: 'id'\n            },\n            {\n              title: '单位',\n              tableAlias: 'T_1',\n              column: 'work_unit'\n            },\n            {\n              title: '工作内容',\n              tableAlias: 'T_1',\n              column: 'work_content'\n            },\n            {\n              title: '入职时间',\n              tableAlias: 'T_1',\n              column: 'begin_date'\n            },\n            {\n              title: '离职时间',\n              tableAlias: 'T_1',\n              column: 'end_date'\n            }\n          ]\n        }\n      ],\n      // 返回数据 sqlSentence 为返回的sql语句，selectFields 字段说明，sqlParams 为参数说明\n      // querySentenceFieldsAndParams: '',\n      sqlSentence: {\n        fieldsSql: '',\n        fromTableSql: '',\n        whereSql: '',\n        groupBySql: '',\n        havingSql: '',\n        orderBySql: '',\n        fullSqlSen: ''\n      },\n      selectFields: [],\n      sqlParams: [],\n      // 以下数据分为两类，一类为常量，比如表头信息，一类为运行的中间数据，这些数据都可以不用关心\n      logicParamShow: false,\n      logicParam2Show: false,\n      havingParamShow: false,\n      havingParam2Show: false,\n      groupPaneDisable: true,\n      currSelectRow: {},\n      currFilterRow: {},\n      currHavingRow: {},\n      buttonSize: 'default',\n      filterSqlFormula: '',\n      havingSqlFormula: '',\n      currentFieldOpt: {\n        optType: 'none',\n        columnFormula: '',\n        columnName: '',\n        columnDesc: '',\n        rawValue: '',\n        rawDesc: '',\n        isStat: false\n      },\n      sortOpt: {\n        sortColumn: '',\n        sortColumnDesc: '',\n        sortType: 'asc'\n      },\n      joinOpt: {\n        leftTable: '',\n        leftTableCode: '',\n        joinTypeSql: 'join',\n        rightTable: '',\n        rightTableCode: ''\n      },\n      filterFieldOpt: {\n        optType: 'none',\n        fieldSql: '',\n        fieldDesc: '',\n        filterLogic: '',\n        logicParam: '',\n        logicParam2: '',\n        logicParamSel: '',\n        logicParam2Sel: ''\n      },\n      havingFieldOpt: {\n        fieldSql: '',\n        fieldDesc: '',\n        filterLogic: '',\n        logicParam: '',\n        logicParam2: '',\n        logicParamSel: '',\n        logicParam2Sel: ''\n      },\n      paramOpt: {\n        paramCode: '',\n        paramName: '',\n        defaultValue: ''\n      },\n      haveSelectCols: [\n        {\n          title: '字段描述',\n          key: 'columnDesc'\n        },\n        {\n          title: 'SQL语句',\n          key: 'columnSql'\n        }\n      ],\n      selectCols: [\n        {\n          type: 'selection',\n          width: 50,\n          align: 'center'\n        },\n        {\n          title: '序',\n          type: 'index',\n          width: 50,\n          align: 'center'\n        },\n        {\n          title: '字段表达式',\n          key: 'colFormula'\n        },\n        {\n          title: '字段别名',\n          key: 'columnName'\n        },\n        {\n          title: '字段描述',\n          key: 'columnDesc'\n        },\n        {\n          title: 'SQL语句',\n          key: 'columnSql'\n        }\n      ],\n      optFuncs: [\n        {\n          label: '无操作',\n          functions: {\n            oracle: 'none',\n            mySql: 'none'\n          },\n          isStat: false\n        },\n        {\n          label: '大写',\n          functions: {\n            oracle: 'upperCase',\n            mySql: 'upperCase'\n          },\n          isStat: false\n        },\n        {\n          label: '小写',\n          functions: {\n            oracle: 'lowerCase',\n            mySql: 'lowerCase'\n          },\n          isStat: false\n        },\n        {\n          label: '取整',\n          functions: {\n            oracle: 'int',\n            mySql: 'int'\n          },\n          isStat: false\n        },\n        {\n          label: '求和',\n          functions: {\n            oracle: 'sum',\n            mySql: 'sum'\n          },\n          isStat: true\n        },\n        {\n          label: '计数',\n          functions: {\n            oracle: 'count',\n            mySql: 'count'\n          },\n          isStat: true\n        },\n        {\n          label: '平均',\n          functions: {\n            oracle: 'average',\n            mySql: 'average'\n          },\n          isStat: true\n        },\n        {\n          label: '方差',\n          functions: {\n            oracle: 'variance',\n            mySql: 'variance'\n          },\n          isStat: true\n        }\n      ],\n      tableCols: [\n        {\n          title: '主表名（表一）',\n          key: 'leftTable'\n        },\n        {\n          title: '链接方式',\n          key: 'joinType'\n        },\n        {\n          title: '从表名（表二）',\n          key: 'rightTable'\n        }\n      ],\n      selectTables: [],\n      joinTypes: [\n        {\n          label: '内联接',\n          value: 'join'\n        },\n        {\n          label: '左联接',\n          value: 'left join'\n        },\n        {\n          label: '右联接',\n          value: 'right join'\n        },\n        {\n          label: '全链接',\n          value: 'full outer join'\n        }\n      ],\n      filterCols: [\n        {\n          title: '序',\n          key: 'filterNo',\n          width: 50\n        },\n        {\n          title: '字段代码',\n          key: 'filterColumn'\n        },\n        {\n          title: '逻辑',\n          key: 'filterLogic'\n        },\n        {\n          title: '数值',\n          key: 'filterValue'\n        },\n        {\n          title: '逻辑表达式',\n          key: 'filterSql'\n        },\n        {\n          title: '过滤说明',\n          key: 'filterDesc'\n        }\n      ],\n      filterFields: [],\n      filterLogics: [\n        {\n          label: '等于',\n          value: '=',\n          params: 1\n        },\n        {\n          label: '小于',\n          value: '<',\n          params: 1\n        },\n        {\n          label: '大于',\n          value: '>',\n          params: 1\n        },\n        {\n          label: '小于等于',\n          value: '<=',\n          params: 1\n        },\n        {\n          label: '大于等于',\n          value: '>=',\n          params: 1\n        },\n        {\n          label: '不等于',\n          value: '<>',\n          params: 1\n        },\n        {\n          label: '介于',\n          value: 'between',\n          params: 2\n        },\n        {\n          label: '包含于',\n          value: 'in()',\n          params: 1\n        },\n        {\n          label: '像',\n          value: 'like',\n          params: 1\n        },\n        {\n          label: '开头',\n          value: 'startwith',\n          params: 1\n        },\n        {\n          label: '空值',\n          value: 'is null',\n          params: 0\n        },\n        {\n          label: '非空',\n          value: 'is not null',\n          params: 0\n        },\n        {\n          label: '标记值',\n          value: 'note',\n          params: 0\n        }\n      ],\n      havingCols: [\n        {\n          title: '序号',\n          key: 'filterNo'\n        },\n        {\n          title: '代码',\n          key: 'filterColumn'\n        },\n        {\n          title: '逻辑',\n          key: 'filterLogic'\n        },\n        {\n          title: '数值',\n          key: 'filterValue'\n        },\n        {\n          title: '逻辑表达式',\n          key: 'filterSql'\n        },\n        {\n          title: '过滤说明',\n          key: 'filterDesc'\n        }\n      ],\n      havingFields: [],\n      sortedCols: [\n        {\n          title: '字段描述',\n          key: 'columnDesc'\n        },\n        {\n          title: 'SQL语句',\n          key: 'columnSql'\n        },\n        {\n          title: '排序方式',\n          key: 'sortTypeDesc'\n        }\n      ],\n      sortedFields: [],\n      paramsCols: [\n        {\n          title: '参数名',\n          key: 'code'\n        },\n        {\n          title: '参数描述',\n          key: 'name'\n        },\n        {\n          title: '默认值',\n          key: 'defaultValue'\n        }\n      ],\n      // 这个函数需要完善，如果做的更精致，在下拉列表中需要匹配数据类型\n      dbInsideFuncs: [\n        {\n          funcName: '数据库当前时间',\n          dataType: 'date',\n          functions: {\n            oracle: 'sysdate',\n            mySql: 'now()'\n          }\n        }\n      ]\n    } // end of return\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/SqlWizard.vue","var render = function () {\nvar this$1 = this;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Tabs',{staticStyle:{\"height\":\"100vh\"},attrs:{\"type\":\"card\"}},[_c('TabPane',{attrs:{\"label\":\"参数设定\"}},[_c('Layout',[_c('Content',[_c('Table',{attrs:{\"border\":\"\",\"highlight-row\":\"\",\"columns\":_vm.paramsCols,\"data\":_vm.sqlParams},on:{\"on-current-change\":function (item) { return this$1.paramOpt = item; }}})],1),_vm._v(\" \"),_c('Footer',{attrs:{\"align\":\"right\"}},[_vm._v(\"\\n        参数名：\\n        \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"参数名\"},model:{value:(_vm.paramOpt.code),callback:function ($$v) {_vm.$set(_vm.paramOpt, \"code\", $$v)},expression:\"paramOpt.code\"}}),_vm._v(\"\\n        参数描述：\\n        \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"参数中文描述\"},model:{value:(_vm.paramOpt.name),callback:function ($$v) {_vm.$set(_vm.paramOpt, \"name\", $$v)},expression:\"paramOpt.name\"}}),_vm._v(\"\\n        默认值：\\n        \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"参数默认值（可以式表达式）\"},model:{value:(_vm.paramOpt.defaultValue),callback:function ($$v) {_vm.$set(_vm.paramOpt, \"defaultValue\", $$v)},expression:\"paramOpt.defaultValue\"}}),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"70px\"},on:{\"on-change\":_vm.onInsideParamChangeEvent}},[_c('Option',{key:\"currentDate()\",attrs:{\"value\":\"currentDate()\"}},[_vm._v(\"当前时间\")]),_vm._v(\" \"),_c('Option',{key:\"year()\",attrs:{\"value\":\"year()\"}},[_vm._v(\"当前年份\")]),_vm._v(\" \"),_c('Option',{key:\"month()\",attrs:{\"value\":\"month()\"}},[_vm._v(\"当前月份\")])],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.addParamEvent}},[_vm._v(\"\\n          添加\\n        \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.updateParamEvent}},[_vm._v(\"\\n          修改\\n        \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.deleteParamEvent}},[_vm._v(\"\\n          删除\\n        \")])],1)],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"选择字段\"}},[_c('Layout',[_c('Sider',{staticStyle:{\"background\":\"#fff\"},attrs:{\"hide-trigger\":\"\"}},[_c('div',[_c('Tree',{attrs:{\"data\":_vm.tableFields},on:{\"on-select-change\":_vm.onTreeItemClick}})],1)]),_vm._v(\" \"),_c('Layout',[_c('Content',[_c('Table',{ref:\"fieldSelection\",attrs:{\"border\":\"\",\"columns\":_vm.selectCols,\"data\":_vm.selectFields,\"highlight-row\":\"\"},on:{\"on-current-change\":_vm.onSelectFieldSelectEvent}})],1),_vm._v(\" \"),_c('Footer',{attrs:{\"align\":\"left\"}},[_vm._v(\"\\n          数据处理:\\n          \"),_c('br'),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onCurrFieldFuncChangeEvent},model:{value:(_vm.currentFieldOpt.optType),callback:function ($$v) {_vm.$set(_vm.currentFieldOpt, \"optType\", $$v)},expression:\"currentFieldOpt.optType\"}},[_vm._l((_vm.optFuncs),function(item){return _c('Option',{key:item.functions[_vm.databaseType],attrs:{\"value\":item.functions[_vm.databaseType]}},[_vm._v(_vm._s(item.label))])}),_vm._v(\" \"),_c('Option',{key:\"colOpt\",attrs:{\"value\":\"colOpt\"}},[_vm._v(\"字段运算\")])],2),_vm._v(\" \"),_c('br',{staticStyle:{\"margin-bottom\":\"15px\"}}),_vm._v(\"\\n              字段语句：\\n              \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"字段或者字段表达式\"},model:{value:(_vm.currentFieldOpt.columnFormula),callback:function ($$v) {_vm.$set(_vm.currentFieldOpt, \"columnFormula\", $$v)},expression:\"currentFieldOpt.columnFormula\"}}),_vm._v(\"\\n              别名：\\n              \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"返回数据字段属性名\"},model:{value:(_vm.currentFieldOpt.columnName),callback:function ($$v) {_vm.$set(_vm.currentFieldOpt, \"columnName\", $$v)},expression:\"currentFieldOpt.columnName\"}}),_vm._v(\" \"),_c('br'),_vm._v(\"\\n          字段描述：\\n          \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"字段名称，一般用于标识字段内容\"},model:{value:(_vm.currentFieldOpt.columnDesc),callback:function ($$v) {_vm.$set(_vm.currentFieldOpt, \"columnDesc\", $$v)},expression:\"currentFieldOpt.columnDesc\"}}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('ButtonGroup',{attrs:{\"size\":_vm.buttonSize}},[_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.moveSelectFieldUpEvent}},[_c('Icon',{attrs:{\"type\":\"ios-arrow-back\"}}),_vm._v(\"\\n              上移\\n            \")],1),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.moveSelectFieldDownEvent}},[_vm._v(\"\\n              下移\\n              \"),_c('Icon',{attrs:{\"type\":\"ios-arrow-forward\"}})],1)],1),_vm._v(\" \"),_c('ButtonGroup',{attrs:{\"size\":_vm.buttonSize}},[_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.addSelectFieldEvent}},[_vm._v(\"\\n              添加\\n            \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.updateSelectFieldEvent}},[_vm._v(\"\\n              修改\\n            \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.deleteSelectFieldEvent}},[_vm._v(\"\\n              删除\\n            \")])],1)],1)],1)],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"数据过滤\"}},[_c('Layout',[_c('Sider',{staticStyle:{\"background\":\"#fff\"},attrs:{\"hide-trigger\":\"\"}},[_c('div',[_c('Tree',{attrs:{\"data\":_vm.tableFields},on:{\"on-select-change\":_vm.onTreeFilterClick}})],1)]),_vm._v(\" \"),_c('Layout',[_c('Content',[_c('Table',{attrs:{\"border\":\"\",\"columns\":_vm.filterCols,\"data\":_vm.filterFields,\"highlight-row\":\"\"},on:{\"on-current-change\":function (item) { return this$1.currFilterRow = item; }}})],1),_vm._v(\" \"),_c('Footer',{attrs:{\"align\":\"left\"}},[_vm._v(\"\\n          数据处理:\\n          \"),_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onFilterFieldFuncChangeEvent},model:{value:(_vm.filterFieldOpt.optType),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"optType\", $$v)},expression:\"filterFieldOpt.optType\"}},_vm._l((_vm.optFuncs),function(item){return (! item.isStat)?_c('Option',{key:item.functions[_vm.databaseType],attrs:{\"value\":item.functions[_vm.databaseType]}},[_vm._v(_vm._s(item.label))]):_vm._e()}),1),_vm._v(\" \"),_c('br',{staticStyle:{\"margin-bottom\":\"15px\"}}),_vm._v(\"\\n          字段语句：\\n          \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"字段或者字段表达式\"},model:{value:(_vm.filterFieldOpt.fieldSql),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"fieldSql\", $$v)},expression:\"filterFieldOpt.fieldSql\"}}),_vm._v(\"\\n          字段描述：\\n          \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"字段描述\"},model:{value:(_vm.filterFieldOpt.fieldDesc),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"fieldDesc\", $$v)},expression:\"filterFieldOpt.fieldDesc\"}}),_vm._v(\" \"),_c('br'),_vm._v(\"\\n          逻辑：\\n          \"),_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onFilterFieldLogicChangeEvent},model:{value:(_vm.filterFieldOpt.filterLogic),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"filterLogic\", $$v)},expression:\"filterFieldOpt.filterLogic\"}},_vm._l((_vm.filterLogics),function(item){return _c('Option',{key:item.value,attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.label))])}),1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.logicParamShow),expression:\"logicParamShow\"}]},[_vm._v(\"\\n            \"+_vm._s(_vm.filterFieldOpt.filterLogic)+\"：\\n            \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"参数\"},model:{value:(_vm.filterFieldOpt.logicParam),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"logicParam\", $$v)},expression:\"filterFieldOpt.logicParam\"}}),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"70px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onFilterParamChangeEvent},model:{value:(_vm.filterFieldOpt.logicParamSel),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"logicParamSel\", $$v)},expression:\"filterFieldOpt.logicParamSel\"}},[_vm._l((_vm.sqlParams),function(item){return _c('Option',{key:':' + item.code,attrs:{\"value\":':' + item.code}},[_vm._v(_vm._s(item.name))])}),_vm._v(\" \"),_vm._l((_vm.dbInsideFuncs),function(func){return _c('Option',{key:func.functions[_vm.databaseType],attrs:{\"value\":func.functions[_vm.databaseType]}},[_vm._v(_vm._s(func.funcName))])})],2)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.logicParam2Show),expression:\"logicParam2Show\"}]},[_vm._v(\"\\n            and：\\n            \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"参数2\"},model:{value:(_vm.filterFieldOpt.logicParam2),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"logicParam2\", $$v)},expression:\"filterFieldOpt.logicParam2\"}}),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"70px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onFilterParam2ChangeEvent},model:{value:(_vm.filterFieldOpt.logicParam2Sel),callback:function ($$v) {_vm.$set(_vm.filterFieldOpt, \"logicParam2Sel\", $$v)},expression:\"filterFieldOpt.logicParam2Sel\"}},[_vm._l((_vm.sqlParams),function(item){return _c('Option',{key:':' + item.code,attrs:{\"value\":':' + item.code}},[_vm._v(_vm._s(item.name))])}),_vm._v(\" \"),_vm._l((_vm.dbInsideFuncs),function(func){return _c('Option',{key:func.functions[_vm.databaseType],attrs:{\"value\":func.functions[_vm.databaseType]}},[_vm._v(_vm._s(func.funcName))])})],2)],1),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.addFilterSqlEvent}},[_vm._v(\"\\n            添加\\n          \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.updateFilterSqlEvent}},[_vm._v(\"\\n            修改\\n          \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.deleteFilterSqlEvent}},[_vm._v(\"\\n            删除\\n          \")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n          逻辑表达式，序号待办上面列表中的条件,如果不在范围内表已删除的条件，需要移除;’*‘表示and'+'表示or，还可以使用'('和')'：\\n          \"),_c('Input',{attrs:{\"type\":\"textarea\",\"rows\":2,\"placeholder\":\"序号表示上面表格中对应的语句，+ 表示或 * 表示并\"},model:{value:(_vm.filterSqlFormula),callback:function ($$v) {_vm.filterSqlFormula=$$v},expression:\"filterSqlFormula\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"关联管理\"}},[_c('Layout',[_c('Content',[_c('Table',{attrs:{\"border\":\"\",\"columns\":_vm.tableCols,\"data\":_vm.selectTables,\"highlight-row\":\"\"},on:{\"on-current-change\":function (item) { return this$1.joinOpt = item; }}})],1),_vm._v(\" \"),_c('Footer',{attrs:{\"align\":\"right\"}},[_vm._v(\"\\n        表一：\\n        \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"主表\",\"readonly\":\"\"},model:{value:(_vm.joinOpt.leftTable),callback:function ($$v) {_vm.$set(_vm.joinOpt, \"leftTable\", $$v)},expression:\"joinOpt.leftTable\"}}),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onJoinTypeChangeEvent},model:{value:(_vm.joinOpt.joinTypeSql),callback:function ($$v) {_vm.$set(_vm.joinOpt, \"joinTypeSql\", $$v)},expression:\"joinOpt.joinTypeSql\"}},_vm._l((_vm.joinTypes),function(item){return _c('Option',{key:item.value,attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.label))])}),1),_vm._v(\"\\n        表二：\\n        \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"从表\",\"readonly\":\"\"},model:{value:(_vm.joinOpt.rightTable),callback:function ($$v) {_vm.$set(_vm.joinOpt, \"rightTable\", $$v)},expression:\"joinOpt.rightTable\"}})],1)],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"分组过滤\",\"disabled\":_vm.groupPaneDisable}},[_c('Layout',[_c('Sider',{staticStyle:{\"background\":\"#fff\"},attrs:{\"hide-trigger\":\"\"}},[_c('Table',{attrs:{\"border\":\"\",\"highlight-row\":\"\",\"columns\":_vm.haveSelectCols,\"data\":_vm.selectFields.filter(function (n) { return n.isStat; })},on:{\"on-current-change\":_vm.onHavingFieldSelectEvent}})],1),_vm._v(\" \"),_c('Layout',[_c('Content',[_c('Table',{attrs:{\"border\":\"\",\"highlight-row\":\"\",\"columns\":_vm.havingCols,\"data\":_vm.havingFields},on:{\"on-current-change\":function (item) { return this$1.currHavingRow = item; }}})],1),_vm._v(\" \"),_c('Footer',{attrs:{\"align\":\"left\"}},[_vm._v(\"\\n          字段语句：\\n          \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"字段或者字段表达式\",\"readonly\":\"\"},model:{value:(_vm.havingFieldOpt.fieldSql),callback:function ($$v) {_vm.$set(_vm.havingFieldOpt, \"fieldSql\", $$v)},expression:\"havingFieldOpt.fieldSql\"}}),_vm._v(\"\\n          字段描述：\\n          \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"字段描述\",\"readonly\":\"\"},model:{value:(_vm.havingFieldOpt.fieldDesc),callback:function ($$v) {_vm.$set(_vm.havingFieldOpt, \"fieldDesc\", $$v)},expression:\"havingFieldOpt.fieldDesc\"}}),_vm._v(\" \"),_c('br'),_vm._v(\"\\n          逻辑：\\n          \"),_c('Select',{staticStyle:{\"width\":\"200px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onHavingLogicChangeEvent},model:{value:(_vm.havingFieldOpt.filterLogic),callback:function ($$v) {_vm.$set(_vm.havingFieldOpt, \"filterLogic\", $$v)},expression:\"havingFieldOpt.filterLogic\"}},_vm._l((_vm.filterLogics),function(item){return _c('Option',{key:item.value,attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.label))])}),1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.havingParamShow),expression:\"havingParamShow\"}]},[_vm._v(\"\\n            \"+_vm._s(_vm.havingFieldOpt.filterLogic)+\"：\\n            \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"参数\"},model:{value:(_vm.havingFieldOpt.logicParam),callback:function ($$v) {_vm.$set(_vm.havingFieldOpt, \"logicParam\", $$v)},expression:\"havingFieldOpt.logicParam\"}}),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"70px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onHavingParamChangeEvent},model:{value:(_vm.havingFieldOpt.logicParamSel),callback:function ($$v) {_vm.$set(_vm.havingFieldOpt, \"logicParamSel\", $$v)},expression:\"havingFieldOpt.logicParamSel\"}},[_vm._l((_vm.sqlParams),function(item){return _c('Option',{key:':' + item.code,attrs:{\"value\":':' + item.code}},[_vm._v(_vm._s(item.name))])}),_vm._v(\" \"),_vm._l((_vm.dbInsideFuncs),function(func){return _c('Option',{key:func.functions[_vm.databaseType],attrs:{\"value\":func.functions[_vm.databaseType]}},[_vm._v(_vm._s(func.funcName))])})],2)],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.havingParam2Show),expression:\"havingParam2Show\"}]},[_vm._v(\"\\n            and：\\n            \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"参数2\"},model:{value:(_vm.havingFieldOpt.logicParam2),callback:function ($$v) {_vm.$set(_vm.havingFieldOpt, \"logicParam2\", $$v)},expression:\"havingFieldOpt.logicParam2\"}}),_vm._v(\" \"),_c('Select',{staticStyle:{\"width\":\"70px\"},attrs:{\"label-in-value\":true},on:{\"on-change\":_vm.onHavingParam2ChangeEvent},model:{value:(_vm.havingFieldOpt.logicParam2Sel),callback:function ($$v) {_vm.$set(_vm.havingFieldOpt, \"logicParam2Sel\", $$v)},expression:\"havingFieldOpt.logicParam2Sel\"}},[_vm._l((_vm.sqlParams),function(item){return _c('Option',{key:':' + item.code,attrs:{\"value\":':' + item.code}},[_vm._v(_vm._s(item.name))])}),_vm._v(\" \"),_vm._l((_vm.dbInsideFuncs),function(func){return _c('Option',{key:func.functions[_vm.databaseType],attrs:{\"value\":func.functions[_vm.databaseType]}},[_vm._v(_vm._s(func.funcName))])})],2)],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.addHavingSqlEvent}},[_vm._v(\"\\n            添加\\n          \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.updateHavingSqlEvent}},[_vm._v(\"\\n            修改\\n          \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.deleteHavingSqlEvent}},[_vm._v(\"\\n            删除\\n          \")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n          逻辑表达式，序号待办上面列表中的条件,如果不在范围内表已删除的条件，需要移除;’*‘表示and'+'表示or，还可以使用'('和')'：\\n          \"),_c('Input',{attrs:{\"type\":\"textarea\",\"rows\":2,\"placeholder\":\"序号表示上面表格中对应的语句，+ 表示或 * 表示并\"},model:{value:(_vm.havingSqlFormula),callback:function ($$v) {_vm.havingSqlFormula=$$v},expression:\"havingSqlFormula\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"排序设定\"}},[_c('Layout',[_c('Sider',{staticStyle:{\"background\":\"#fff\"},attrs:{\"hide-trigger\":\"\"}},[_c('Table',{attrs:{\"border\":\"\",\"highlight-row\":\"\",\"columns\":_vm.haveSelectCols,\"data\":_vm.selectFields},on:{\"on-current-change\":_vm.onSortFieldSelectEvent}})],1),_vm._v(\" \"),_c('Layout',[_c('Content',[_c('Table',{attrs:{\"border\":\"\",\"highlight-row\":\"\",\"columns\":_vm.sortedCols,\"data\":_vm.sortedFields},on:{\"on-current-change\":_vm.onSortColumnSelectEvent}})],1),_vm._v(\" \"),_c('Footer',{attrs:{\"align\":\"left\"}},[_vm._v(\"\\n          排序字段：\\n          \"),_c('Input',{staticStyle:{\"width\":\"auto\"},attrs:{\"placeholder\":\"排序字段\",\"readonly\":\"\"},model:{value:(_vm.sortOpt.sortColumnDesc),callback:function ($$v) {_vm.$set(_vm.sortOpt, \"sortColumnDesc\", $$v)},expression:\"sortOpt.sortColumnDesc\"}}),_vm._v(\"\\n          排序方式：\\n          \"),_c('Select',{staticStyle:{\"width\":\"200px\"},model:{value:(_vm.sortOpt.sortType),callback:function ($$v) {_vm.$set(_vm.sortOpt, \"sortType\", $$v)},expression:\"sortOpt.sortType\"}},[_c('Option',{attrs:{\"value\":\"asc\"}},[_vm._v(\"升序\")]),_vm._v(\" \"),_c('Option',{attrs:{\"value\":\"desc\"}},[_vm._v(\"降序\")])],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('ButtonGroup',{attrs:{\"size\":_vm.buttonSize}},[_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.moveSortFieldUpEvent}},[_c('Icon',{attrs:{\"type\":\"ios-arrow-back\"}}),_vm._v(\"\\n              上移\\n            \")],1),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.moveSortFieldDownEvent}},[_vm._v(\"\\n              下移\\n              \"),_c('Icon',{attrs:{\"type\":\"ios-arrow-forward\"}})],1)],1),_vm._v(\" \"),_c('ButtonGroup',{attrs:{\"size\":_vm.buttonSize}},[_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.addSortFieldEvent}},[_vm._v(\"\\n              添加\\n            \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.updateSortFieldEvent}},[_vm._v(\"\\n              修改\\n            \")]),_vm._v(\" \"),_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.deleteSortFieldEvent}},[_vm._v(\"\\n              删除\\n            \")])],1)],1)],1)],1)],1),_vm._v(\" \"),_c('TabPane',{attrs:{\"label\":\"结果展示*\"}},[_c('Button',{attrs:{\"size\":_vm.buttonSize,\"type\":\"primary\"},on:{\"click\":_vm.makeQueryResultEvent}},[_vm._v(\"\\n      生成结果\\n    \")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('Input',{attrs:{\"type\":\"textarea\",\"rows\":20,\"readonly\":\"\"},model:{value:(_vm.sqlSentence.fullSqlSen),callback:function ($$v) {_vm.$set(_vm.sqlSentence, \"fullSqlSen\", $$v)},expression:\"sqlSentence.fullSqlSen\"}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3f72b33a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/SqlWizard.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SqlWizard.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SqlWizard.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3f72b33a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./SqlWizard.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/SqlWizard.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport SqlWizard from '@/components/SqlWizard'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'SqlWizard',\n      component: SqlWizard\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport iview from 'iview'\nimport 'iview/dist/styles/iview.css'\nimport App from './App'\nimport router from './router'\n\nVue.config.productionTip = false\nVue.use(iview)\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}